# $Id$

methods:

  findByIdAndNote:
    query: |
      SELECT
        *
      FROM
        $__table
      WHERE
        id = $id
        AND note = $note

  findAllWithSkills1:
    associations:
      skills:
        table: skills
        type: manyToMany

  findAllWithSkills2:
    associations:
      skills:
        table: skills
        type: manyToMany
        column: id
        through:
          table: employees_skills
          column: employees_id
          referencedColumn: id
          inverseColumn: skills_id

  insert:
    associations:
      skills:
        table: skills
        type: manyToMany
      computer:
        table: computers
        type: oneToOne

  findAllByFirstName:
    associations:
      skills:
        table: skills
        type: manyToMany

  findAllWithDepartment1:
    associations:
      department:
        table: departments
        type: manyToOne

  findAllWithDepartment2:
    associations:
      department:
        table: departments
        type: manyToOne
        column: id
        referencedColumn: departments_id

  findAllWithComputer1:
    associations:
      computer:
        table: computers
        type: oneToOne

  findAllWithComputer2:
    associations:
      computer:
        table: computers
        type: oneToOne
        column: employees_id
        referencedColumn: id

  findWithDepartmentByFirstName:
    query: |
      SELECT
        *
      FROM
        $__table
      WHERE
        first_name = $firstName
    associations:
      department:
        table: departments
        type: manyToOne

  findAllWithOrderedSkills:
    associations:
      skills:
        table: skills
        type: manyToMany
        orderBy: skills.id DESC

  findWithOrderedSkills:
    associations:
      skills:
        table: skills
        type: manyToMany
        orderBy: skills.id DESC

  findWithSkillsByFirstName:
    query: |
      SELECT
        *
      FROM
        $__table
      WHERE
        first_name = $firstName
    associations:
      skills:
        table: skills
        type: manyToMany

  update:
    associations:
      skills:
        table: skills
        type: manyToMany
      computer:
        table: computers
        type: oneToOne

  findWithComputerByFirstName:
    query: |
      SELECT
        *
      FROM
        $__table
      WHERE
        first_name = $firstName
    associations:
      computer:
        table: computers
        type: oneToOne

  delete:
    associations:
      skills:
        table: skills
        type: manyToMany
      computer:
        table: computers
        type: oneToOne

  findOneForFirstNameByFirstName:
    query: |
      SELECT
        first_name
      FROM
        $__table
      WHERE
        first_name = $firstName

  findOneForCount:
    query: |
      SELECT
        COUNT(*)
      FROM
        $__table

  findAllNotes:
    query: |
      SELECT
        note
      FROM
        $__table

  insertUserDefined:
    query: |
      INSERT INTO $__table (
        first_name,
        last_name,
        note,
        created_at
        )
      VALUES (
        $firstName,
        $lastName,
        'Bar',
        $createdAt
        )

  updateUserDefined:

  deleteUserDefined:
    query: |
      DELETE FROM $__table
      WHERE
        id = $id

  updateNoteByNote:
    query: |
      UPDATE $__table
      SET
        note = $note,
        updated_at = $updatedAt
      WHERE
        note = $oldNote

  deleteByNote:
    query: |
      DELETE FROM $__table
      WHERE
        note = $note

  findWithStaticQuery:
    query: SELECT 1 AS one

  findAllWithStaticQuery:
    query: SELECT 1 AS one

  findOneWithStaticQuery:
    query: SELECT 1 AS one

  insertWithStaticQuery:
    query: |
      INSERT INTO $__table (
        first_name,
        last_name,
        note,
        created_at
        )
      VALUES (
        'Foo',
        'Bar',
        'Baz',
        $createdAt
        )

  updateWithStaticQuery:
    query: |
      UPDATE $__table
      SET
        note = 'Qux',
        updated_at = $updatedAt

  deleteWithStaticQuery:
    query: DELETE FROM $__table

  insertWithNoQuery:

  updateWithNoQuery:

  deleteWithNoQuery:

  insertWithEmails:
    associations:
      emails:
        table: emails
        type: manyToMany
        through:
          table: employees_emails
          inverseColumn: emails_id

  findAllWithEmails:
    associations:
      emails:
        table: emails
        type: manyToMany
        orderBy: emails.emails_id
        through:
          table: employees_emails
          inverseColumn: emails_id

  findAllOrderByLastName:
    orderBy: last_name

  findOrderByLastName:
    orderBy: last_name

  findOneOrderByLastName:
    query: SELECT last_name FROM $__table
    orderBy: last_name

  findAllByIds:
    query: |
      SELECT
        *
      FROM
        $__table
      WHERE
        id IN ($ids)

# Local Variables:
# mode: conf-colon
# coding: iso-8859-1
# tab-width: 2
# indent-tabs-mode: nil
# End:
